
#----------------maven and tomcate on ubuntu ------------------------

# Use the official Ubuntu image as the base image for building the Maven project
FROM ubuntu:20.04 AS build

# Set non-interactive mode for installing packages
ENV DEBIAN_FRONTEND=noninteractive

# Install necessary packages: OpenJDK 11, Maven, and other utilities
RUN apt-get update && apt-get install -y \
    openjdk-11-jdk \
    maven \
    wget \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Set JAVA_HOME environment variable
ENV JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64

# Set the working directory in the container
WORKDIR /app

# Copy the project files into the container
COPY . .

# Build the project using Maven
RUN mvn clean package

# Debug: List the contents of the target directory to confirm the WAR file
RUN ls -al /app/webapp/target
# Use the official Ubuntu image as the base for the runtime environment
FROM ubuntu:20.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive

# Install necessary packages
RUN apt-get update && apt-get install -y \
    openjdk-11-jdk \
    wget \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set the Java environment variables
ENV JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
ENV PATH=$JAVA_HOME/bin:$PATH

# Download and extract Tomcat (correcting the download and extraction paths)
RUN wget https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.95/bin/apache-tomcat-9.0.95.tar.gz -O /tmp/tomcat.tar.gz && \
    mkdir /opt/tomcat && \
    tar xzvf /tmp/tomcat.tar.gz -C /opt/tomcat --strip-components=1 && \
    rm /tmp/tomcat.tar.gz

# Set up Tomcat environment variables
ENV CATALINA_HOME=/opt/tomcat
ENV PATH=$CATALINA_HOME/bin:$PATH

# Expose Tomcat port
EXPOSE 8080

# Copy the generated WAR file from the build stage
COPY --from=build /app/webapp/target/webapp.war /opt/tomcat/webapps/webapp.war
# Start Tomcat
CMD ["/opt/tomcat/bin/catalina.sh", "run"]
